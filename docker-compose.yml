services:
  kbs:
    build:
      context: .
      dockerfile: kbs/docker/coco-as-grpc/Dockerfile
    image: ghcr.io/confidential-containers/staged-images/kbs-grpc-as:latest
    environment:
      - RUST_LOG
    command: [
        "/usr/local/bin/kbs",
        "--config-file",
        "/opt/confidential-containers/kbs/user-keys/docker-compose/kbs-config.toml",
      ]
    restart: always # keep the server running
    ports:
      - "8080:8080"
    volumes:
      - ./kbs/data/kbs-storage:/opt/confidential-containers/kbs/repository:rw
      - ./kbs/data/nebula-ca:/opt/confidential-containers/kbs/nebula-ca:rw
      - ./kbs/config:/opt/confidential-containers/kbs/user-keys
    depends_on:
      as:
        condition: service_started
      setup:
        condition: service_completed_successfully

  as:
    build:
      context: .
      dockerfile: attestation-service/docker/as-grpc/Dockerfile
    image: ghcr.io/confidential-containers/staged-images/coco-as-grpc:latest
    environment:
      - RUST_LOG
    ports:
    - "50004:50004"
    restart: always
    volumes:
    - ./kbs/data/attestation-service:/opt/confidential-containers/attestation-service:rw
    - ./kbs/config/as-config.json:/etc/as-config.json:rw
    - ./kbs/config/sgx_default_qcnl.conf:/etc/sgx_default_qcnl.conf:rw
    command: [
      "grpc-as",
      "--socket",
      "0.0.0.0:50004",
      "--config-file",
      "/etc/as-config.json"
    ]
    depends_on:
    - rvps

  rvps:
    build:
      context: .
      dockerfile: rvps/docker/Dockerfile
    image: ghcr.io/confidential-containers/staged-images/rvps:latest
    environment:
      - RUST_LOG
    restart: always # keep the server running
    ports:
      - "50003:50003"
    volumes:
      - ./kbs/data/reference-values:/opt/confidential-containers/attestation-service/reference_values:rw
      - ./kbs/config/rvps.json:/etc/rvps.json:rw
    command: [
      "rvps",
      "--address",
      "0.0.0.0:50003"
    ]

  keyprovider:
    image: ghcr.io/confidential-containers/coco-keyprovider:latest
    environment:
      - RUST_LOG
    restart: always
    ports:
      - "50000:50000"
    volumes:
      - ./kbs/config:/opt/confidential-containers/kbs/user-keys
    command: [
      "coco_keyprovider",
      "--socket",
      "0.0.0.0:50000",
      "--kbs",
      "http://kbs:8080",
      "--auth-private-key",
      "/opt/confidential-containers/kbs/user-keys/private.key"
    ]
    depends_on:
      kbs:
        condition: service_started
      setup:
        condition: service_completed_successfully

  setup:
    image: alpine/openssl
    environment:
      - RUST_LOG
    entrypoint: /bin/ash
    command: >
        -c "
          if [ ! -s /opt/confidential-containers/kbs/user-keys/private.key ]; then
            /usr/bin/openssl genpkey -algorithm ed25519 > /opt/confidential-containers/kbs/user-keys/private.key &&
            /usr/bin/openssl pkey -in /opt/confidential-containers/kbs/user-keys/private.key -pubout -out /opt/confidential-containers/kbs/user-keys/public.pub;
          fi"
    volumes:
      - ./kbs/config:/opt/confidential-containers/kbs/user-keys
