name: KBS Rust Suites

on:
  push:
    branches:
      - "main"
    paths:
      - 'kbs/**'
      - '.github/workflows/kbs-rust.yml'
      - 'Cargo.toml'
  pull_request:
    paths:
      - 'kbs/**'
      - '.github/workflows/kbs-rust.yml'
      - 'Cargo.toml'

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: Check
    strategy:
      fail-fast: false
    env:
      RUSTC_VERSION: 1.76.0
    runs-on: ubuntu-22.04

    steps:
    - name: Code checkout
      uses: actions/checkout@v4

    - name: Install Rust toolchain (${{ env.RUSTC_VERSION }})
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ env.RUSTC_VERSION }}
        components: rustfmt, clippy

    - name: Building dependencies installation
      run: |
        sudo apt-get update && sudo apt-get install -y protobuf-compiler libprotobuf-dev libtss2-dev

    - name: Install TPM dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libtss2-dev

    - name: Install TDX dependencies
      run: |
        sudo curl -L https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -
        sudo echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu jammy main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list
        sudo apt-get update
        sudo apt-get install -y libtdx-attest-dev libsgx-dcap-quote-verify-dev

    - name: KBS Build [Default]
      working-directory: kbs
      run: make

    - name: KBS Build [Built-in CoCo AS]
      working-directory: kbs
      run: make

    - name: KBS Build [gRPC CoCo AS]
      working-directory: kbs
      run: make COCO_AS_INTEGRATE_TYPE=grpc

    - name: build KBS for Intel Trust Authority
      working-directory: kbs
      run: make AS_TYPE=intel-trust-authority-as

    - name: Lint
      working-directory: kbs
      run: make lint

    - name: Format
      working-directory: kbs
      run: make format

    - name: Test
      working-directory: kbs
      run: make check
