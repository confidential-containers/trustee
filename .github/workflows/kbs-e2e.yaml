name: KBS e2e

on:
  workflow_call:
    inputs:
      sample:
        type: boolean
        default: false
      runs-on:
        type: string
        default: '["ubuntu-22.04"]'
        description: JSON representation of runner labels
      tarball:
        type: string
        description: Artifact containing checked out source from a prior job
        required: true

# Self-hosted runners do not set -o pipefail otherwise
defaults:
  run:
    shell: bash

jobs:
  e2e-test:
    runs-on: ${{ fromJSON(inputs.runs-on) }}

    steps:
    - uses: actions/download-artifact@v4

    - name: Extract tarball
      run: tar xzf ./artifact/${{ inputs.tarball }}

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Set up rust build cache
      uses: actions/cache@v4
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          target/
        key: rust-${{ hashFiles('./Cargo.lock') }}

    - name: Install dependencies
      working-directory: kbs/test
      run: |
        sudo apt-get update
        sudo apt-get install -y make --no-install-recommends
        sudo make install-dependencies

    - name: Build bins
      working-directory: kbs/test
      run: make bins
    
    - name: Set cc_kbc sample attester env
      if: inputs.sample == true
      run: echo "AA_SAMPLE_ATTESTER_TEST=1" >> "$GITHUB_ENV"

    - name: Run e2e test
      working-directory: kbs/test
      run: sudo -E make e2e-test
