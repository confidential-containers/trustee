name: KBS e2e (Docker Compose and Sample TEE)

on:
  pull_request:
    branches: 
      - main

permissions:
  contents: read

env:
  TEST_SECRET_CONTENT: shhhhh
  TEST_SECRET_PATH: test-org/test-repo/test-secret

jobs:
  e2e-test:
    strategy:
      matrix:
        instance:
          - ubuntu-24.04
          - ubuntu-24.04-arm
        include:
          - instance: ubuntu-24.04
            build_platform: linux/amd64
            target_arch: x86_64
            verifier: all-verifier
          - instance: ubuntu-24.04-arm
            build_platform: linux/arm64
            target_arch: aarch64
            verifier: cca-verifier
    runs-on: ${{ matrix.instance }}
    steps:
    - name: Checkout KBS
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Install Rust (for client)
      uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1.13.0
      with:
        components: rustfmt, clippy

    - name: Build client
      run: |
        cargo build --manifest-path tools/kbs-client/Cargo.toml --no-default-features --features sample_only --release

    - name: Setup Keys
      run: | 
        openssl genpkey -algorithm ed25519 > kbs/config/private.key
        openssl pkey -in kbs/config/private.key -pubout -out kbs/config/public.pub

    - name: Build KBS Cluster
      run: docker compose build --build-arg BUILDPLATFORM=${{ matrix.build_platform }} --build-arg ARCH=${{ matrix.target_arch }} --build-arg VERIFIER=${{ matrix.verifier }}

    - name: Start KBS cluster
      run: docker compose up -d

    - name: Set Resource
      working-directory: target/release/
      run: |
        echo "$TEST_SECRET_CONTENT" > test-secret
        ./kbs-client --url http://127.0.0.1:8080 config --auth-private-key ../../kbs/config/private.key  set-resource --path "$TEST_SECRET_PATH" --resource-file test-secret

    - name: Get Resource (negative)
      working-directory: target/release/
      run: |
        ! ./kbs-client --url http://127.0.0.1:8080 get-resource --path "$TEST_SECRET_PATH"

    - name: Update policy
      working-directory: target/release/
      run: ./kbs-client --url http://127.0.0.1:8080 config --auth-private-key ../../kbs/config/private.key  set-resource-policy --policy-file "$policy_path"
      env:
        policy_path: ../../kbs/test/data/policy_2.rego

    - name: Get Resource
      working-directory: target/release/
      run: ./kbs-client --url http://127.0.0.1:8080 get-resource --path "$TEST_SECRET_PATH"
