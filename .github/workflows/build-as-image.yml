name: Build CoCo AS/RVPS Image

on:
  workflow_call:
    inputs:
      build_option:
        description: 'Build option for the image'
        type: string
        required: false

jobs:
  build_as_image:
    strategy:
      fail-fast: false
      matrix:
        target_arch:
        - x86_64
        - s390x
        - aarch64
        name:
        - RESTful CoCo-AS
        - gRPC CoCo-AS
        - RVPS
        include:
        # add docker_file + tag to each target
        - name: gRPC CoCo-AS
          docker_file: attestation-service/docker/as-grpc/Dockerfile
          tag: coco-as-grpc
        - name: RESTful CoCo-AS
          docker_file: attestation-service/docker/as-restful/Dockerfile
          tag: coco-as-restful
        - name: RVPS
          docker_file: rvps/docker/Dockerfile
          tag: rvps
        # add instance and verifier flag to target
        - target_arch: x86_64
          target_platform: linux/amd64
          build_platform: linux/amd64
          instance: ubuntu-24.04
          verifier: all-verifier
        - target_arch: s390x
          target_platform: linux/s390x
          build_platform: linux/s390x
          instance: s390x
          verifier: se-verifier
        - target_arch: aarch64
          target_platform: linux/arm64
          build_platform: linux/arm64
          instance: ubuntu-24.04-arm
          verifier: cca-verifier
    runs-on: ${{ matrix.instance }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build ${{ matrix.name }} Container Image
      run: |
        commit_sha=${{ github.sha }}
        docker buildx build --platform "${{ matrix.target_platform }}" --provenance false \
          -f "${{ matrix.docker_file }}" ${{ inputs.build_option }} \
          --build-arg BUILDPLATFORM="${{ matrix.build_platform }}" \
          --build-arg ARCH="${{ matrix.target_arch }}" \
          --build-arg VERIFIER="${{ matrix.verifier }}" \
          -t "ghcr.io/confidential-containers/staged-images/${{ matrix.tag }}:${commit_sha}-${{ matrix.target_arch }}" \
          -t "ghcr.io/confidential-containers/staged-images/${{ matrix.tag }}:latest-${{ matrix.target_arch }}" .
