[package]
name = "verifier"
version = "0.1.0"
edition = "2021"

[features]
default = ["all-verifier"]
all-verifier = [
    "tdx-verifier",
    "sgx-verifier",
    "snp-verifier",
    "az-snp-vtpm-verifier",
    "az-tdx-vtpm-verifier",
    "csv-verifier",
    "hygon-dcu-verifier",
    "cca-verifier",
    "se-verifier",
    "nvidia-verifier",
]
tdx-verifier = ["eventlog", "scroll", "intel-tee-quote-verification-rs"]
sgx-verifier = ["scroll", "intel-tee-quote-verification-rs"]
az-snp-vtpm-verifier = ["az-snp-vtpm", "sev", "snp-verifier"]
az-tdx-vtpm-verifier = ["az-tdx-vtpm", "openssl", "tdx-verifier"]
snp-verifier = ["asn1-rs", "openssl", "sev", "x509-parser", "nvidia-verifier"]
csv-verifier = ["codicon", "csv-rs", "eventlog", "openssl", "tokio/fs"]
hygon-dcu-verifier = ["csv-rs"]
cca-verifier = ["ear", "jsonwebtoken", "veraison-apiclient", "ccatoken"]
se-verifier = ["openssl", "pv", "serde_with", "tokio/sync"]
nvidia-verifier = [ "nvml-wrapper", "p384" ]

[dependencies]
anyhow.workspace = true
thiserror.workspace = true
asn1-rs = { version = "0.7.1", optional = true }
async-trait.workspace = true
az-snp-vtpm = { version = "0.7.4", default-features = false, features = [
    "verifier",
], optional = true }
az-tdx-vtpm = { version = "0.7.4", default-features = false, features = [
    "verifier",
], optional = true }
base64 = "0.22.1"
bincode = "1.3.3"
byteorder.workspace = true
cfg-if = "1.0.0"
codicon = { version = "3.0", optional = true }
csv-rs = { git = "https://github.com/openanolis/csv-rs", rev = "b67a07e", optional = true, default-features = false, features = [
    "network",
] }
eventlog = { path = "../eventlog", optional = true }
hex.workspace = true
jsonwebkey = "0.3.5"
jsonwebtoken = { workspace = true, default-features = false, optional = true }
kbs-types.workspace = true
log.workspace = true
openssl = { version = "0.10.73", optional = true }
pv = { version = "0.10.0", package = "s390_pv", optional = true }
scroll = { version = "0.13.0", default-features = false, features = [
    "derive",
], optional = true }
serde.workspace = true
serde_json.workspace = true
serde_with = { workspace = true, optional = true }
sev = { version = "6.3.1", default-features = false, features = [
    "openssl",
    "snp",
], optional = true }
sha2.workspace = true
tokio = { workspace = true, optional = true }
intel-tee-quote-verification-rs = { git = "https://github.com/intel/SGXDataCenterAttestationPrimitives", tag = "DCAP_1.23", optional = true }
strum.workspace = true
veraison-apiclient = { git = "https://github.com/veraison/rust-apiclient", rev = "fe149cd", optional = true }
ccatoken = { git = "https://github.com/veraison/rust-ccatoken", rev = "6d5b8db", optional = true }
ear = { version = "0.4.0", optional = true }
x509-parser = { version = "0.17.0", optional = true }
reqwest.workspace = true
bitflags = { version = "2.8.0", features = ["serde"] }
time = "0.3.41"
nvml-wrapper = { version = "0.11.0", optional = true, default-features = false, features = ["serde"]}
p384 = { version = "0.13.1", optional = true }

[build-dependencies]
shadow-rs.workspace = true
tonic-build.workspace = true

[dev-dependencies]
assert-json-diff.workspace = true
rstest.workspace = true
serial_test.workspace = true
tokio.workspace = true
env_logger.workspace = true
